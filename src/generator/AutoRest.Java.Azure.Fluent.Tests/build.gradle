apply plugin: 'java'
apply plugin: 'checkstyle'

group = 'com.microsoft.azure'
version = '1.0.0-SNAPSHOT'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

checkstyle {
    toolVersion = "6.9"
    configFile = new File("$rootDir/Tools/checkstyle/checkstyle.xml")
    configProperties = [samedir: "$rootDir/Tools/checkstyle"]
    reportsDir = new File("$rootDir/Tools/checkstyle/reports")
}

dependencies {
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.microsoft.azure:azure-client-runtime:1.0.0-SNAPSHOT'
    compile 'joda-time:joda-time:2.8.2'
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'io.reactivex:rxjava:1.1.8'
    testCompile 'junit:junit:4.12'
    testCompile 'junit:junit-dep:4.11'
    testCompile 'commons-io:commons-io:2.4'
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardError"
    }
}

javadoc {
    options.encoding = 'UTF-8'
}

test {
    reports.getHtml()
    reports.html.destination = file("$rootDir/TestResults/JavaAzureFluentCodeGen")
}

task buildRuntime(type: Exec) {
    workingDir "$rootDir/src/client/Java"
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'gradle', 'uploadArchives'
    } else {
        commandLine 'gradle', 'uploadArchives'
    }
}

task npmrestore(type: Exec) {
    workingDir "$rootDir/src/dev/TestServer/server"
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'npm', 'install'
    } else {
        commandLine 'npm', 'install'
    }
}

task installforever(type: Exec, dependsOn: 'npmrestore') {
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'npm', 'install', '-g', 'forever'
    } else {
        commandLine 'npm', 'install', '-g', 'forever'
    }
}

task runserver(type: Exec, dependsOn: 'installforever') {
    workingDir "$rootDir/src/dev/TestServer/server"
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'forever', 'start', 'startup/www.js'
    } else {
        commandLine 'forever', 'start', 'startup/www.js'
    }
}

task testcoverage(type: JavaExec, dependsOn: 'runserver') {
    main = 'fixtures.azurereport.CoverageReporter'
    classpath = sourceSets.test.runtimeClasspath
}

task stopserver(type: Exec, dependsOn: 'testcoverage') {
    workingDir "$rootDir/src/dev/TestServer/server"
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'forever', 'stop', 'startup/www.js'
    } else {
        commandLine 'forever', 'stop', 'startup/www.js'
    }
}

tasks.compileJava.dependsOn 'clean'
tasks.test.dependsOn 'runserver'
tasks.test.finalizedBy 'stopserver'